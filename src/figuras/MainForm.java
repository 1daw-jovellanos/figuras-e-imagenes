
package figuras;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

/**
 * Un ejemplo de dibujo y animacion básica con clases.
 * 
 * <ul>
 *      <li>En el evento windowOpen se crean los objetos de la escena.</li>
 *      <li>Se crea un timer, que invocará al método que dibuja un fotograma
 *          cada 40 ms</li>
 *      <li>En cada fotograma:
 *          <ul>
 *              <li>Se borra todo el panel</li>
 *              <li>Se dibuja <strong>toda</strong> la escena</li>
 *              <li>Se recalcula la posición del pájaro</li>
 *          </ul>
 *      </li>
 * </ul>
 * @author victor
 */
public class MainForm extends javax.swing.JFrame {
    
    // Variables de instancia. Como siempre, solo las imprescindibles.
    List<Dibujable> objetos; //La necesitamos accesible en varios métodos
    Imagen pajaro; // La necesitamos accesible en varios métodos
    javax.swing.Timer timer; // Por comodidad, por si queremos parar la animacion

    /**
     * Creates new form NewJFrame
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 300));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 300));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Inicial los objetos de la escena y los guarda en la lista de objetos
     * dibujables
     */
    private void iniciaObjetos() {
        final int k = 20;
        objetos = new ArrayList<>();
        Figura f; // variables auxiliares
        FiguraRellenable fr;
        
        // suelo
        f = new Linea(2 * k, 12 * k, 18 * k, 12 * k);
        f.setColor(Color.GREEN);
        f.setGrosor(2);
        objetos.add(f);

        // Cuerpo casa
        fr = new Rectangulo(4 * k, 6 * k, 6 * k, 6 * k);
        fr.setColorRelleno(Color.PINK);
        objetos.add(fr);
        
        // Puerta
        fr = new Rectangulo(5 * k, 8 *k, 2 * k, 4 *k);
        fr.setColorRelleno(Color.RED);
        objetos.add(fr);
        
        // Tejado
        f = new Linea(4 * k, 6 * k, 7 * k, 4 * k);
        f.setGrosor(3);
        f.setColor(Color.DARK_GRAY);
        objetos.add(f);
        f = new Linea(7 * k, 4 * k, 10 * k, 6 * k);
        f.setGrosor(3);
        f.setColor(Color.DARK_GRAY);
        objetos.add(f);

        // Sol
        f = new Linea(4*k, 3*k, 4*k, 5*k);
        f.setColor(Color.YELLOW);
        f.setGrosor(2);
        objetos.add(f);
        f = new Linea(3*k, 4*k, 5*k, 4*k);
        f.setColor(Color.YELLOW);
        f.setGrosor(2);
        objetos.add(f);
        fr = new Ovalo(4 * k, 4 * k, 1 * k, 1 * k);
        fr.setColorRelleno(Color.YELLOW);
        fr.setColor(Color.ORANGE);
        objetos.add(fr);

        // Pájaro. 
        // Lo referenciamos con una variable de instancia para poder manipularlo
        pajaro = new Imagen("pajaro.png", 10 * k, 3 * k);
        objetos.add(pajaro); // pero lo añadimos a la lista para que sea cómodo dibujarlo

        // Crear el timer y asociarlo a un método que dibuje
        // un fotograma
        int delay = 40; //milliseconds
        ActionListener task = new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                dibujarFotograma(); // Se invoca cada 40 ms
            }
        };
        timer = new javax.swing.Timer(delay, task);
        timer.start();
//        Como en este caso el timer solo se pone en marcha, y no se para
//        podría ser local. 
    }

    /**
     * Invocado cada 40 ms, hace la animación
     */
    public void dibujarFotograma() {
        Graphics2D g = (Graphics2D)jPanel1.getGraphics();
        // borrar panel
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, 400, 300);
        // dibujar todos los objetos
        for (Dibujable d : objetos) {
            d.dibujar(g);
        }
        // Poner al pájaro en otra posicion
        pajaro.setX((pajaro.getX()+3) % 400);
        
        // comentario
        g.setColor(Color.BLACK);
        g.setFont(new Font("Verdana", Font.PLAIN, 10) );
        g.drawString("La posición en la lista es importante:", 10, 270);
        g.drawString("El pájaro pasa por delante porque está el ultimo en la lista", 10, 280);
        g.drawString("y se dibuja en último lugar", 10, 290);
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        iniciaObjetos();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
